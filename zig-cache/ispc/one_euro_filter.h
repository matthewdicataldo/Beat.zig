//
// zig-cache/ispc/one_euro_filter.h
// (Header automatically generated by the ispc compiler.)
// DO NOT EDIT THIS FILE.
//

#pragma once
#include <stdint.h>

#if !defined(__cplusplus)
#if defined(__STDC_VERSION__) && (__STDC_VERSION__ >= 199901L)
#include <stdbool.h>
#else
typedef int bool;
#endif
#endif



#ifdef __cplusplus
namespace ispc { /* namespace */
#endif // __cplusplus

#ifndef __ISPC_ALIGN__
#if defined(__clang__) || !defined(_MSC_VER)
// Clang, GCC, ICC
#define __ISPC_ALIGN__(s) __attribute__((aligned(s)))
#define __ISPC_ALIGNED_STRUCT__(s) struct __ISPC_ALIGN__(s)
#else
// Visual Studio
#define __ISPC_ALIGN__(s) __declspec(align(s))
#define __ISPC_ALIGNED_STRUCT__(s) __ISPC_ALIGN__(s) struct
#endif
#endif

#ifndef __ISPC_STRUCT_OneEuroState__
#define __ISPC_STRUCT_OneEuroState__
struct OneEuroState {
    float x_prev;
    float dx_prev;
    bool initialized;
    float min_cutoff;
    float beta;
    float derivate_cutoff;
    float prev_timestamp;
};
#endif


///////////////////////////////////////////////////////////////////////////
// Functions exported from ispc code
///////////////////////////////////////////////////////////////////////////
#if defined(__cplusplus) && (! defined(__ISPC_NO_EXTERN_C) || !__ISPC_NO_EXTERN_C )
extern "C" {
#endif // __cplusplus
    extern void ispc_adapt_filter_parameters(float * recent_errors, float * system_loads, struct OneEuroState * states, int32_t count);
    extern void ispc_compute_prediction_confidence(float * predicted_values, float * actual_values, float * timestamps, float * confidence_scores, int32_t count);
    extern void ispc_compute_prediction_scores(float * execution_times, float * confidence_levels, float * worker_loads, float * numa_distances, float * prediction_scores, int32_t worker_count);
    extern void ispc_one_euro_filter_batch(float * raw_values, float * timestamps, struct OneEuroState * states, float * filtered_values, int32_t count);
    extern void ispc_validate_predictions(float * predicted_times, float * actual_times, float * validation_weights, float * validation_scores, int32_t count);
#if defined(__cplusplus) && (! defined(__ISPC_NO_EXTERN_C) || !__ISPC_NO_EXTERN_C )
} /* end extern C */
#endif // __cplusplus


#ifdef __cplusplus
} /* namespace */
#endif // __cplusplus
